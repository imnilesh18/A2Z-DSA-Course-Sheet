// Problem Link: https://leetcode.com/problems/find-the-difference/description/

/*
 * 389. Find the Difference
 *
 * You are given two strings s and t.
 * String t is generated by random shuffling string s and then add one more letter at a random position.
 * Return the letter that was added to t.
 *
 * Example 1:
 * Input: s = "abcd", t = "abcde"
 * Output: "e"
 * Explanation: 'e' is the letter that was added.
 *
 * Example 2:
 * Input: s = "", t = "y"
 * Output: "y"
 *
 * Constraints:
 * 0 <= s.length <= 1000
 * t.length == s.length + 1
 * s and t consist of lowercase English letters.
 */

// Approach-1
// T.C : O(n)
// S.C : O(n)
class Solution {
public:
   char findTheDifference(string s, string t){
      unordered_map<char, int> mp;

      for (char&ch : s) {
         mp[ch]++;
      }

      for (char&ch : t) {
         mp[ch]--;

         if (mp[ch] < 0) {
            return ch;
         }
      }
      return 'x';
   }
};

// Code with comments for better understanding:
// Approach-1
// T.C : O(n)
// S.C : O(n)
class Solution {
public:
   char findTheDifference(string s, string t){
      unordered_map<char, int> mp;

      // Count occurrences of each character in string s
      for (char&ch : s) {
         mp[ch]++;
      }

      // Iterate through each character in t
      for (char&ch : t) {
         mp[ch]--; // Decrease the count for each character

         // If the count is less than 0, this character is the extra one
         if (mp[ch] < 0) {
            return ch;
         }
      }

      // Default return in case no character is found (shouldn't reach here)
      return 'x';
   }
};
